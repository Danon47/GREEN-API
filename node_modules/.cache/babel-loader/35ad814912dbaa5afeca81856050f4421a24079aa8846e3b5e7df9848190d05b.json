{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0434\\u0430\\u043D\\u0438\\u043D \\u0441\\u0442\\u043E\\u043B\\\\danil.DESKTOP-EN4V9AA\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435\\\\\\u0413\\u0440\\u0438\\u043D-\\u0410\\u043F\\u0438\\\\green-api-chat\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, List, Container, Typography } from '@mui/material';\nimport { sendMessage, receiveMessages } from '../api/greenApi';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [newMessage, setNewMessage] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const idInstance = localStorage.getItem('idInstance');\n    const apiToken = localStorage.getItem('apiToken');\n    if (!idInstance || !apiToken) {\n      console.log('Учетные данные не введены');\n      return;\n    }\n    const fetchMessages = async () => {\n      const data = await receiveMessages();\n      if (data) {\n        var _data$body, _data$body$messageDat, _data$body$messageDat2;\n        const message = (_data$body = data.body) === null || _data$body === void 0 ? void 0 : (_data$body$messageDat = _data$body.messageData) === null || _data$body$messageDat === void 0 ? void 0 : (_data$body$messageDat2 = _data$body$messageDat.textMessageData) === null || _data$body$messageDat2 === void 0 ? void 0 : _data$body$messageDat2.textMessage;\n        if (message) {\n          setMessages(prev => [...prev, {\n            text: message,\n            isMy: false\n          }]);\n        }\n      } else {\n        console.log('Нет новых сообщений или ошибка');\n      }\n    };\n    const interval = setInterval(fetchMessages, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleSend = async () => {\n    if (!newMessage || !phoneNumber) return;\n    try {\n      await sendMessage(phoneNumber, newMessage);\n      setMessages(prev => [...prev, {\n        text: newMessage,\n        isMy: true\n      }]);\n      setNewMessage('');\n    } catch (error) {\n      console.error('Ошибка отправки:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0442\\u0435\\u043B\\u044F\",\n      value: phoneNumber,\n      onChange: e => setPhoneNumber(e.target.value),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        text: msg.text,\n        isMy: msg.isMy\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSend,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"i4MyH1Dn9jqs0qjJ/WYSP8a9LkE=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","List","Container","Typography","sendMessage","receiveMessages","Message","jsxDEV","_jsxDEV","Chat","_s","newMessage","setNewMessage","phoneNumber","setPhoneNumber","messages","setMessages","idInstance","localStorage","getItem","apiToken","console","log","fetchMessages","data","_data$body","_data$body$messageDat","_data$body$messageDat2","message","body","messageData","textMessageData","textMessage","prev","text","isMy","interval","setInterval","clearInterval","handleSend","error","maxWidth","children","label","value","onChange","e","target","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onClick","variant","color","_c","$RefreshReg$"],"sources":["E:/данин стол/danil.DESKTOP-EN4V9AA/Тестовые/Грин-Апи/green-api-chat/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, List, Container, Typography  } from '@mui/material';\r\nimport { sendMessage, receiveMessages } from '../api/greenApi';\r\nimport Message from './Message';\r\n\r\nconst Chat = () => {\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const idInstance = localStorage.getItem('idInstance');\r\n    const apiToken = localStorage.getItem('apiToken');\r\n  \r\n    if (!idInstance || !apiToken) {\r\n      console.log('Учетные данные не введены');\r\n      return;\r\n    }\r\n  \r\n    const fetchMessages = async () => {\r\n      const data = await receiveMessages();\r\n      if (data) {\r\n        const message = data.body?.messageData?.textMessageData?.textMessage;\r\n        if (message) {\r\n          setMessages((prev) => [...prev, { text: message, isMy: false }]);\r\n        }\r\n      } else {\r\n        console.log('Нет новых сообщений или ошибка');\r\n      }\r\n    };\r\n  \r\n    const interval = setInterval(fetchMessages, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleSend = async () => {\r\n    if (!newMessage || !phoneNumber) return;\r\n    try {\r\n      await sendMessage(phoneNumber, newMessage);\r\n      setMessages((prev) => [...prev, { text: newMessage, isMy: true }]);\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error('Ошибка отправки:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <TextField\r\n        label=\"Номер получателя\"\r\n        value={phoneNumber}\r\n        onChange={(e) => setPhoneNumber(e.target.value)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <List>\r\n        {messages.map((msg, index) => (\r\n          <Message key={index} text={msg.text} isMy={msg.isMy} />\r\n        ))}\r\n      </List>\r\n      <div>\r\n        <TextField\r\n          label=\"Сообщение\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button onClick={handleSend} variant=\"contained\" color=\"primary\">\r\n          Отправить\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
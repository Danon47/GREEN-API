{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0434\\u0430\\u043D\\u0438\\u043D \\u0441\\u0442\\u043E\\u043B\\\\danil.DESKTOP-EN4V9AA\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435\\\\\\u0413\\u0440\\u0438\\u043D-\\u0410\\u043F\\u0438\\\\green-api-chat\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, List, Container, Typography } from '@mui/material';\nimport { sendMessage, receiveMessages } from '../api/greenApi';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [newMessage, setNewMessage] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const idInstance = localStorage.getItem('idInstance');\n    const apiToken = localStorage.getItem('apiToken');\n    if (idInstance && apiToken) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n      return;\n    }\n    const fetchMessages = async () => {\n      const data = await receiveMessages();\n      if (data) {\n        var _data$body, _data$body$messageDat, _data$body$messageDat2;\n        const message = (_data$body = data.body) === null || _data$body === void 0 ? void 0 : (_data$body$messageDat = _data$body.messageData) === null || _data$body$messageDat === void 0 ? void 0 : (_data$body$messageDat2 = _data$body$messageDat.textMessageData) === null || _data$body$messageDat2 === void 0 ? void 0 : _data$body$messageDat2.textMessage;\n        if (message) {\n          setMessages(prev => [...prev, {\n            text: message,\n            isMy: false\n          }]);\n        }\n      }\n    };\n    const interval = setInterval(fetchMessages, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      children: \"\\u0412\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0447\\u0430\\u0442.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0442\\u0435\\u043B\\u044F\",\n      value: phoneNumber,\n      onChange: e => setPhoneNumber(e.target.value),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        text: msg.text,\n        isMy: msg.isMy\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSend,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n_s(Chat, \"+sUqhBo+VposFDxIfCJHrkmiwz4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","List","Container","Typography","sendMessage","receiveMessages","Message","jsxDEV","_jsxDEV","Chat","_s","newMessage","setNewMessage","phoneNumber","setPhoneNumber","messages","setMessages","isLoggedIn","setIsLoggedIn","idInstance","localStorage","getItem","apiToken","fetchMessages","data","_data$body","_data$body$messageDat","_data$body$messageDat2","message","body","messageData","textMessageData","textMessage","prev","text","isMy","interval","setInterval","clearInterval","variant","align","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","label","value","onChange","e","target","fullWidth","margin","map","msg","index","onClick","handleSend","color","_c","$RefreshReg$"],"sources":["E:/данин стол/danil.DESKTOP-EN4V9AA/Тестовые/Грин-Апи/green-api-chat/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, List, Container, Typography  } from '@mui/material';\r\nimport { sendMessage, receiveMessages } from '../api/greenApi';\r\nimport Message from './Message';\r\n\r\nconst Chat = () => {\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      const idInstance = localStorage.getItem('idInstance');\r\n      const apiToken = localStorage.getItem('apiToken');\r\n  \r\n      if (idInstance && apiToken) {\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n        return;\r\n      }\r\n  \r\n      const fetchMessages = async () => {\r\n        const data = await receiveMessages();\r\n        if (data) {\r\n          const message = data.body?.messageData?.textMessageData?.textMessage;\r\n          if (message) {\r\n            setMessages((prev) => [...prev, { text: message, isMy: false }]);\r\n          }\r\n        }\r\n      };\r\n  \r\n      const interval = setInterval(fetchMessages, 5000);\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n  \r\n    if (!isLoggedIn) {\r\n      return (\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Войдите в систему, чтобы начать чат.\r\n        </Typography>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <TextField\r\n          label=\"Номер получателя\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <List>\r\n          {messages.map((msg, index) => (\r\n            <Message key={index} text={msg.text} isMy={msg.isMy} />\r\n          ))}\r\n        </List>\r\n        <div>\r\n          <TextField\r\n            label=\"Сообщение\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <Button onClick={handleSend} variant=\"contained\" color=\"primary\">\r\n            Отправить\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    );\r\n  };\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}